import { vec3, mat4, quat } from 'gl-matrix';
import { JsonSerializable } from '../interfaces/json-serializable';
import { JsonSerializedData } from '../interfaces/json-serialized-data';
export declare class Transform extends JsonSerializable {
    private _position;
    private _rotationInDegrees;
    private _rotation;
    private _scale;
    private _modelMatrix;
    private _localMatrix;
    private _parent;
    private _children;
    private _uuid;
    private _dirty;
    constructor();
    get modelMatrix(): mat4;
    get position(): vec3;
    get rotation(): vec3;
    get rotationInRadians(): quat;
    get localScale(): vec3;
    get parent(): Transform | null;
    get uuid(): string;
    setPosition(x?: number, y?: number, z?: number): void;
    setRotation(xDegrees?: number, yDegrees?: number, zDegrees?: number): void;
    setScale(x?: number, y?: number, z?: number): void;
    translate(x?: number, y?: number, z?: number): void;
    rotate(xDegrees?: number, yDegrees?: number, zDegrees?: number): void;
    scale(x?: number, y?: number, z?: number): void;
    updateMatrices(): void;
    setParent(parent: Transform | null): void;
    get right(): vec3;
    get left(): vec3;
    get up(): vec3;
    get down(): vec3;
    get forward(): vec3;
    get back(): vec3;
    lookAt(target: vec3, worldUp?: vec3): void;
    toJsonObject(): JsonSerializedData;
    fromJson(jsonObject: JsonSerializedData): void;
    rotateByQuat(q: quat): void;
    setDirty(dirty: boolean): void;
    get rotationQuat(): quat;
    setRotationQuat(newRotation: quat): void;
}
